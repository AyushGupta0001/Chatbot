<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Alphabot Chatbot</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #121212;
            color: white;
            font-family: "Roboto", sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            height: 100vh;
            transition: background-color 0.3s, color 0.3s;
        }

        #header {
            background-color: #1e88e5;
            padding: 10px 15px;
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            color: white;
            text-shadow: 2px 2px 4px darkred; 
        }

        #chat-container {
            display: flex;
            flex-direction: column;
            gap: 10px;
            padding: 15px;
            overflow-y: auto;
            flex-grow: 1;
            box-shadow: 0 0 20px 5px rgba(0, 0, 139, 0.6); 
        }

        .message {
            max-width: 60%;
            padding: 10px 15px;
            border-radius: 20px;
            word-break: break-word;
            display: inline-block;
            box-shadow: 0 4px 6px rgba(0, 0, 255, 0.3);
            transition: box-shadow 0.3s;
        }

        .message.user {
            background-color: #1e88e5;
            color: white;
            align-self: flex-end;
        }

        .message.bot {
            background-color: #ffffff;
            color: #121212;
            align-self: flex-start;
        }

        #input-container {
            display: flex;
            align-items: center;
            padding: 10px 15px;
            background-color: #1f1f1f;
            border-top: 1px solid #424242;
        }

        #user-input {
            flex-grow: 1;
            margin-right: 10px;
            padding: 10px;
            border: none;
            border-radius: 20px;
            background-color: #2c2c2c;
            color: white;
        }

        #user-input:focus {
            outline: none;
        }

        #send-button, #mode-toggle, #refresh-button {
            border: none;
            background-color: #1e88e5;
            color: white;
            padding: 10px;
            border-radius: 50%;
            cursor: pointer;
            margin-left: 5px;
            box-shadow: 0 4px 6px rgba(0, 0, 255, 0.5);
        }

        #send-button i, #mode-toggle i, #refresh-button i {
            font-size: 24px;
        }

        .light-mode {
            background-color: #ffffff;
            color: #121212;
        }

        .light-mode .message.user {
            background-color: #1976D2;
            color: white;
        }

        .light-mode .message.bot {
            background-color: #121212;
            color: white;
        }

        .light-mode #input-container {
            background-color: #f5f5f5;
            border-top: 1px solid #ccc;
        }

        .light-mode #user-input {
            background-color: #ffffff;
            color: black;
        }

        .light-mode #send-button, .light-mode #mode-toggle, .light-mode #refresh-button {
            background-color: #1976D2;
        }
    </style>
</head>
<body>
    <div id="header">Alphabot</div>
    <div id="chat-container"></div>
    <form id="chat-form">
        <div id="input-container">
            <input type="text" id="user-input" placeholder="Type a message...">
            <button id="send-button" type="submit">
                <i class="material-icons">send</i>
            </button>
            <button id="mode-toggle" type="button" title="Toggle Dark/Light Mode">
                <i class="material-icons">brightness_6</i>
            </button>
            <button id="refresh-button" type="button" title="Refresh Chat">
                <i class="material-icons">refresh</i>
            </button>
        </div>
    </form>

    <!-- Add audio for "jig jag" sound -->
    <audio id="jig-jag-audio" loop>
        <source src="path_to_your_jig_jag_sound.mp3" type="audio/mpeg">
        Your browser does not support the audio element.
    </audio>

    <script>
        const chatContainer = document.getElementById("chat-container");
        const chatForm = document.getElementById("chat-form");
        const userInput = document.getElementById("user-input");
        const modeToggle = document.getElementById("mode-toggle");
        const refreshButton = document.getElementById("refresh-button");
        const jigJagAudio = document.getElementById("jig-jag-audio");  
        let isDarkMode = true;

        function createMessageElement(message, isUser) {
            const messageElement = document.createElement("div");
            messageElement.classList.add("message", isUser ? "user" : "bot");
            messageElement.textContent = message;
            return messageElement;
        }

        function showTypingIndicator() {
            const typingElement = document.createElement("div");
            typingElement.textContent = "Typing ";
            let emojiIndex = 0;
            const emojis = ["😀", "😃", "😄", "😁", "😆", "😅", "😊", "🙃", "😉", "🙂", "😌", "🤨", "🧐"];

            setInterval(() => {
                typingElement.textContent = `Typing ${emojis[emojiIndex]}`;
                emojiIndex = (emojiIndex + 1) % emojis.length;
            }, 300);

            chatContainer.appendChild(typingElement);
            return typingElement;
        }

        async function fetchResponse(userMessage) {
            const typingElement = showTypingIndicator();
            jigJagAudio.play();

            // Simulate response time
            await new Promise((resolve) => setTimeout(resolve, 1500));

            jigJagAudio.pause();
            typingElement.remove();

            try {
                const response = await fetch("https://backend.buildpicoapps.com/aero/run/llm-api?pk=v1-Z0FBQUFBQm5IZkJDMlNyYUVUTjIyZVN3UWFNX3BFTU85SWpCM2NUMUk3T2dxejhLSzBhNWNMMXNzZlp3c09BSTR6YW1Sc1BmdGNTVk1GY0liT1RoWDZZX1lNZlZ0Z1dqd3c9PQ==", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        prompt: userMessage
                    })
                });

                if (!response.ok) {
                    console.error("Error:", response.statusText);
                    return "There was an error. Please try again later.";
                }

                const data = await response.json();
                return data.status === "success" ? data.text : "There was an error. Please try again later.";
            } catch (error) {
                console.error("Error:", error);
                return "There was an error. Please try again later.";
            }
        }

        function toggleMode() {
            isDarkMode = !isDarkMode;
            if (isDarkMode) {
                document.body.classList.remove("light-mode");
                modeToggle.innerHTML = '<i class="material-icons">brightness_6</i>';
            } else {
                document.body.classList.add("light-mode");
                modeToggle.innerHTML = '<i class="material-icons">brightness_4</i>';
            }
        }

        function refreshChat() {
            chatContainer.innerHTML = '';  
        }

        chatForm.addEventListener("submit", async (event) => {
            event.preventDefault();

            const userMessage = userInput.value.trim();
            if (!userMessage) return;

            chatContainer.appendChild(createMessageElement(userMessage, true));
            userInput.value = "";

            const botResponse = await fetchResponse(userMessage);
            chatContainer.appendChild(createMessageElement(botResponse, false));
        });

        modeToggle.addEventListener("click", toggleMode);
        refreshButton.addEventListener("click", refreshChat);  
    </script>
</body>
</html>
